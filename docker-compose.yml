services:
  frontend:
    container_name: frontend
    image: frontend
    build: frontend/
    ports:
      - 8001:8001
    volumes:
      - ./frontend:/frontend
    networks:
      - chat_network
  
  backend:
    container_name: chat_backend
    image: backend
    build:
      context: . # to include pipfiles that are in the parent directory
      dockerfile: backend/Dockerfile
    ports:
      - 8000:8000
    depends_on:
      database:
        condition: service_healthy
    volumes:
      - ./backend:/backend
    networks:
      - chat_network
    
  database:
    container_name: database
    image: postgres
    env_file:
      - ./backend/.env
    ports:
      - 5432:5432
    restart: always
    volumes:
      - ./database/data:/var/lib/postgresql/data
    networks:
      - chat_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 5
    
  redis:
    container_name: rediss
    image: redis
    ports:
      - 6379:6379
    networks:
      - chat_network

networks:
  chat_network:
    driver: bridge